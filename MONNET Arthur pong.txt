var score = [0,0];
var screenWidth = width;
var screenHeight = height;
var p1PadX = 10;
var p1PadY = screenHeight*3/8;
var p1PadW = 20;
var p1PadH = screenHeight/4;
var p2PadW = 20;
var p2PadX = screenWidth - p2PadW - 10 ;
var p2PadY = screenHeight*3/8;
var p2PadH = screenHeight/4;

var speedPad1 = 5;
var speedPad2 = 5;
var speedBall = 5;
var ballDirectionX = 0;
var ballDirectionY = 0;
var p1Direction = 0;
var p2Direction = 0;

var ballRadius = 10;
var ballX = 10+ p1PadW + ballRadius;
var ballY = screenHeight/2;
var start = false;
var winner =0;

var setUp = function (){
    p1PadX = 10;
    p1PadY = screenHeight*3/8;
    p2PadX = screenWidth - p2PadW - 10 ;
    p2PadY = screenHeight*3/8;
    ballDirectionX = 0;
    ballDirectionY = 0;
    p1Direction = 0;
    p2Direction = 0;
    ballRadius = 10;
    speedBall = 5;
    ballX = 10+ p1PadW + ballRadius;
    ballY = screenHeight/2;
    if (score[0]>=10){
        winner = 2;
    }else if (score[1]>=10){
        winner = 1;
    }
    start = false;
};
    keyPressed = function(){
    if (keyCode ===  32 && !start && winner===0) {  
        ballDirectionX = 1;
        ballDirectionY = 1; 
        start = true;
    }
    if (key.toString()==='z'){
        if (p1PadY > 0){
            p1Direction = -1;
        }else{
            p1Direction = 0;
        }
    }
    if (key.toString()==='s'){
        if (p1PadY < screenHeight*3/4){
            p1Direction = 1;
        }else{
            p1Direction = 0;
        }
        
    }
    if (key.toString()==='o'){
        if (p2PadY > 0){
            p2Direction = -1;
        }else{
            p2Direction = 0;
        }
    }
    if (key.toString()==='l'){
        if (p2PadY < screenHeight*3/4){
            p2Direction = 1;
        }else{
            p2Direction = 0;
        }
    }
};


keyReleased = function(){
    if (key.toString()==='z' || key.toString()==='s'){
        p1Direction = 0;
    }
    if (key.toString()==='o' || key.toString()==='l'){
        p2Direction = 0;
    }
    
    
};

var adjustPosition = function () {
    p1PadY = p1PadY + p1Direction*speedPad1;
    p2PadY = p2PadY + p2Direction*speedPad2;
    
    ballX = ballX + ballDirectionX*speedBall;
    ballY = ballY + ballDirectionY*speedBall;
    if (screenWidth < ballX){
        score[1]++;
        ballDirectionY =0;
        ballDirectionX =0;
        setUp();
    }
    if (ballX < 0){
        score[0]++;
        
        ballDirectionY =0;
        ballDirectionX =0;
        setUp();
    }
    if ((p2PadX-ballRadius < ballX && p2PadX > ballX && (ballY > p2PadY && ballY < p2PadY + p2PadH)) || ((ballY > p1PadY && ballY < p1PadY + p1PadH) && ballX < p1PadX + p1PadW + ballRadius && ballX < p1PadX + p1PadW )){
        ballDirectionX =-1*ballDirectionX;
        if ( speedBall<10){
            speedBall=speedBall+0.2;
        }
    }
    if (screenWidth-ballRadius < ballY || ballY < ballRadius){
        ballDirectionY =-1*ballDirectionY;
    }
};

var drawPad1 = function() {
    fill(0, 136, 255);
    rect(p1PadX, p1PadY, p1PadW, p1PadH);
};

var drawPad2 = function() {
    fill(255, 0, 0);
    rect(p2PadX, p2PadY, p2PadW, p2PadH);
};

var drawBall = function(){
    fill(255, 255, 255);
    ellipse(ballX, ballY, ballRadius*2, ballRadius*2);
};

var draw = function() {
    background(197, 201, 219);
    fill (255, 255, 255);
    noStroke();
    rect(screenHeight/2-5, 0, 10, screenHeight);
    text (score[1], screenWidth/2-30, 10);
    text (score[0], screenWidth/2+20, 10);
    
    adjustPosition();
    drawPad1();
    drawPad2();
    drawBall();
    if (winner !==0){
        fill(255, 0, 0);
        text ("player "+winner+" Gagne", screenWidth/2-30, 200);
    }
};
















import 'dart:math';

import 'package:flutter/material.dart';
import 'dart:async';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.red,
      ),
      home: MyHomePage(title: 'Cookie Clicker'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  MyHomePage({Key key, this.title}) : super(key: key);

  final String title;


  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;
  double _speedCounterDouble = 1;
  int _speedCounter = 1;
  double _resistance = 0.4;
  int _auto = 1;
  int _prixPuissance =8;
  int _prixVitesse =2000;
  double _gold = 0;
  int _goldInt =0;
  int _lvl=1;
  String _niveau ="lvl1";
  var rng = new Random();
  int _randomColor = 2;
  String _color = "vert";
  String _colorPompe = "lvl1_vert";
  String _unity ="";


  Timer _timer;

  void startTimer() {
    const oneSec = const Duration(seconds: 1);
    _timer = new Timer.periodic(
      oneSec,
          (Timer timer) {
      },
    );
  }


  void _incrementCounter() {
    setState(() {
    print(200- _counter/_resistance);

      if ((_counter + _speedCounter)/_resistance  >= 200) {
        if (_randomColor == 6) {
          _gold = _gold + (_counter + _speedCounter) * 2;

          _goldInt = _gold.round();
        } else {
          _gold = _gold + (_counter + _speedCounter);
        }
        _lvl++;


        if(_lvl>=20 && _lvl<=40){
          _niveau = "lvl2";

        }else if(_lvl>40 && _lvl<=60){
          _niveau = "lvl3";

        }else if(_lvl>60 && _lvl<=80) {
          _niveau = "lvl4";
        }


        _resistance = _resistance * 1.1;
        _counter = 0;
        _randomColor = rng.nextInt(7
        );
        if (_randomColor == 1) {
          _color= "bleu";
          _colorPompe = _niveau+"_bleu";
        } else if (_randomColor == 2) {
          _color= "vert";
          _colorPompe = _niveau+"_vert";
        } else if (_randomColor == 3) {
          _color= "jaune";
          _colorPompe = _niveau+"_jaune";
        } else if (_randomColor == 4) {
          _color= "rouge";
          _colorPompe = _niveau+"_rouge";
        } else if (_randomColor == 5) {
          _color= "violet";
          _colorPompe = _niveau+"_violet";
        } else if (_randomColor == 6) {
          _color= "multicolore";
          _colorPompe = _niveau+"_multicolore";
        }

    }else{
        _counter = _counter + _speedCounter;
      }
      if (_gold>10000){
        _goldInt = (_gold/1000).round();
        _unity = "K";
      }else if (_gold>10000000){
        _goldInt = (_gold/1000000).round();
        _unity = "M";
      }else {
        _goldInt = _gold.round();
        _unity = "";
      }



    });
  }
  void _incrementPuissance() {
    setState(() {
      if (_prixPuissance<_gold){
        _speedCounterDouble= (_speedCounterDouble +1* _resistance) ;
        _speedCounter= _speedCounterDouble.round();
        _gold = _gold - _prixPuissance;
        _prixPuissance = (_prixPuissance* 1.4).round();



      }
      if (_gold>10000){
        _goldInt = (_gold/1000).round();
        _unity = "K";
      }else if (_gold>10000000){
        _goldInt = (_gold/1000000).round();
        _unity = "M";
      }else {
        _goldInt = _gold.round();
        _unity = " ";
      }

    });
  }
  void _incrementAutoClic() {

    setState(() {
      _auto = _auto + 1;
      _prixVitesse =(_prixVitesse* 1.6).round();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(

      body: SafeArea(

        child: Container(
          decoration: BoxDecoration(
            image: DecorationImage(
              image: AssetImage("images/background.jpg"),
              fit: BoxFit.cover,
            ),
          ),
          child: Column(
            children: [
              Expanded(
                flex: 1,
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    FlatButton(
                      onPressed: _incrementCounter,
                      child: Container(
                          width: 30,
                          height: 30,
                          child : Image.asset("images/power.png", scale: 1,)
                      ),
                    ),
                    Text('$_goldInt'+' $_unity'),
                    FlatButton(
                      onPressed: _incrementCounter,
                      child: Container(
                          width: 30,
                          height: 30,
                          child : Image.asset("images/power.png", scale: 1,)
                      ),
                    ),
                  ],
                ),
              ),
              Expanded(
                flex: 6,
                    child :FlatButton(
                      onPressed: _incrementCounter,
                      child: Column(
                          children: [
                          Expanded(
                            flex: 3,
                            child : Column(
                              children: [
                                SizedBox(height: 200- _counter/_resistance),



                                Expanded(
                                  child: Container(
                                      width: double.infinity,
                                      child:Image.asset("images/ballon_$_color.png", scale: 1,)),
                                ),
                              ],
                            ),

                          ),
                          Expanded(
                            flex: 2,
                            child : Image.asset("images/pompe_$_colorPompe.png", scale: 1,)

                          )
                        ]

                      ),
                    )
              ),
              Expanded(
                flex: 1,
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.spaceAround,
                  children: [
                    FlatButton(
                      onPressed: _incrementAutoClic,
                      child: Container(
                        width: 100,
                        height: 100,
                        child : Column(
                              children: [
                                Expanded(child: Image.asset("images/icon_speed.png", scale: 1,)),

                                Text('$_prixVitesse  💶')
                              ]











                          ),
                      )
                    ),

                    FlatButton(
                        onPressed: _incrementPuissance,
                        child: Container(
                          width: 100,
                          height: 100,
                          child : Column(
                              children: [
                                Expanded(child: Image.asset("images/muscle.png", scale: 1,)),

                                Text('$_prixPuissance  💶')
                              ]
                          ),
                        )
                    ),
                  ],
                ),
              )
            ],
          ),
          // child:Container(
          //
          //   width: double.infinity,
          //   height: 400,
          //   color: Colors.grey,
          //   child: Column(
          //     mainAxisAlignment: MainAxisAlignment.end,
          //     children: <Widget>[
          //       Text(
          //         '$_counter',
          //         style: TextStyle(color: Colors.red,fontSize : 30),
          //       ),
          //       FlatButton(
          //         onPressed: _incrementCounter,
          //         child: Container(
          //           width: 100,
          //           color: Colors.grey,
          //           child: Padding(
          //               padding: const EdgeInsets.all(8),
          //               child: Image.network("https://media.giphy.com/media/RjfXaD7oKscJaGO7c8/giphy.gif")),
          //         )
          //       )
          //     ],
          //   ),
          // ),
        ),
      ),
    );
  }
}


