var outMenu =false;
var strong = 0;
var cadeau = 0;
var nbBrick = 10;
var nbKill = 0;
var screenWidth = width;
var screenHeight = height;
var padH = 20;
var padY = screenHeight - padH -10;
var padX = screenWidth*3/8;
var padW = screenWidth/4;
var score=0;
var combo=1;
var tabBricks = [];
var tabBricksStart = [];
var nbBlackBrick=0;
var nbLine= 7;
var nbColone = 7;
var brickX = 30;
var brickY = 40;
var brickW = (screenWidth-brickX*2-5*(nbColone-1))/nbColone;
var brickH = brickW/3;
var creatTab = function(){
    for (var i=0; i<nbLine;i++){
        tabBricks[i]=[];
        tabBricksStart[i]=[];
        for (var j=0; j<nbColone ; j++){
            
            if (cadeau<16 || strong === 0){
                cadeau=0;
            }
            tabBricks[i][j]=[strong, cadeau]; 
            if (tabBricks[i][j][0]===4){
                nbBlackBrick++;
            }
            tabBricksStart[i][j]=tabBricks[i][j][0];
            
        }
    }
};
mousePressed = function() {
    if (mouseX<screenWidth/2+50 && mouseX>screenWidth/2-50 && !outMenu){
        if(mouseY>80 && mouseY< 100){
            
            outMenu = true;
            for (var i=0; i<nbLine;i++){
                tabBricks[i]=[];
                tabBricksStart[i]=[];
                for (var j=0; j<nbColone ; j++){
                    strong = floor(random(0,4.3));
                    if (strong===3){
                        strong=floor(random(1,3));
                    }
                    cadeau = floor(random(0,29));
                    if (cadeau<16 || strong === 0){
                        cadeau=0;
                    }
                    tabBricks[i][j]=[strong, cadeau]; 
                    if (tabBricks[i][j][0]===4){
                        nbBlackBrick++;
                    }
                    tabBricksStart[i][j]=tabBricks[i][j][0];
                    
                }
            }   
        } else if(mouseY>120 && mouseY< 140){
            
            outMenu = true;
            for (var i=0; i<nbLine;i++){
                tabBricks[i]=[];
                tabBricksStart[i]=[];
                for (var j=0; j<nbColone ; j++){
                    strong = floor(random(0,4.3));
                    cadeau = floor(random(0,29));
                    if (cadeau<16 || strong === 0){
                        cadeau=0;
                    }
                    tabBricks[i][j]=[strong, cadeau]; 
                    if (tabBricks[i][j][0]===4){
                        nbBlackBrick++;
                    }
                    tabBricksStart[i][j]=tabBricks[i][j][0];
                    
                }
            }   
        } else if(mouseY>160 && mouseY< 180){
            outMenu = true;
            for (var i=0; i<nbLine;i++){
                tabBricks[i]=[];
                tabBricksStart[i]=[];
                for (var j=0; j<nbColone ; j++){
                    strong = floor(random(0,4.3));
                    cadeau = floor(random(0,30));
                    if (cadeau<16 || strong === 0){
                        cadeau=0;
                    }
                    tabBricks[i][j]=[strong, cadeau]; 
                    if (tabBricks[i][j][0]===4){
                        nbBlackBrick++;
                    }
                    tabBricksStart[i][j]=tabBricks[i][j][0];
                    
                }
            }   
        } else if(mouseY>200 && mouseY< 220){
            outMenu = true;
            for (var i=0; i<nbLine;i++){
                tabBricks[i]=[];
                tabBricksStart[i]=[];
                for (var j=0; j<nbColone ; j++){
                    strong = floor(random(0,4.3));
                    if (strong===1){
                        strong=floor(random(2,4));
                    }
                    cadeau = floor(random(0,30));
                    if (cadeau<16 || strong === 0){
                        cadeau=0;
                    }
                    tabBricks[i][j]=[strong, cadeau]; 
                    if (tabBricks[i][j][0]===4){
                        nbBlackBrick++;
                    }
                    tabBricksStart[i][j]=tabBricks[i][j][0];
                    
                }
            }   
        }
        
    }
};
var menu = function (){
    background(0, 0, 0);
    text("MENU", screenWidth/2-30, 50);
    for(var i =1; i<=4; i++){
        text ("Dificulty -"+i, screenWidth/2-50, 40+ i*40, 100, 20);
    }
    
};







var activeShield = true;
var ca=1;
var sensCa = 0.05;

var speedPad = 5;
var speedBall = 3;
var speedFall =2;
var ballDirectionX = 0;
var ballDirectionY = 0;
var ballAngle;
var padDir = 0;

var sourisX = mouseX;
var sourisY = mouseY;
var toucheDir =[37,39];

var shield=false;
var rebond=true;

var ballRadius = 10;
var ballY = padY- ballRadius;
var ballX = screenWidth/2;
var start = false;
var winner = false;


var setUp = function (){
    rebond=true;
    padY = screenHeight - padH -10;
    padX = screenWidth*3/8;
    ballDirectionX = 0;
    ballDirectionY = 0;
    padDir = 0;
    speedBall=3;
    ballY = padY- ballRadius;
    ballX = screenWidth/2;
    combo=1;
    start = false;
    
};

keyPressed = function(){
    if (keyCode ===38 && !start && !winner) { 
            if (ballAngle<1 && ballAngle>-1){
                ballDirectionX = -ballAngle;
                ballDirectionY = -1;
            }else if(ballAngle<0){
                ballDirectionX = 1;
                ballDirectionY = 1/ballAngle;
            }else{
                ballDirectionX = -1;
                ballDirectionY = -1/ballAngle;
            }
            
            start = true;
        }
    
    if (keyCode ===  toucheDir[0]){
        if (padX > 0){
            padDir = -1;
        }else{
            padDir = 0;
        }
    }
    if (keyCode ===  toucheDir[1]){
        
        if (padX < screenWidth*3/4){
            padDir = 1;
        }else{
            padDir = 0;
        }
    }
};


keyReleased = function(){
    if (keyCode ===  39 || keyCode ===  37){
        padDir = 0;
    } 
};


var drawCadeau =function(i,j,brickX,brickW,brickY,brickH){
    if(tabBricks[i][j][2]!==0){
        if(tabBricks[i][j][0]!==0){
            tabBricks[i][j][2]=1/speedFall;
        }else{
            tabBricks[i][j][2]++;
        }
    }
    
    
    if ( tabBricks[i][j][2]===0){
        if (tabBricks[i][j][1]===26){
            rebond=false;
        }
        if (tabBricks[i][j][1]===27){
            padW=screenWidth/3;
        }
        if (tabBricks[i][j][1]===28 && activeShield){
            fill(90, 209, 69);
            rect(0,screenHeight-5,screenWidth,5);
            shield=true;
        }else{
            shield =false;
        }
        if (tabBricks[i][j][1]===29){
            toucheDir= [39, 37];
            
        }
    }else{
        if (tabBricks[i][j][1]===26){
            fill(240, 144, 40);
            ellipse(brickX+brickW/2,brickY+brickH/2 +tabBricks[i][j][2]*speedFall, 13,13);
            fill(255, 232, 20);
            ellipse(brickX+brickW/2,brickY+brickH/2  +tabBricks[i][j][2]*speedFall, 10,10);
            if (padY+padH > brickY+brickH/2 +tabBricks[i][j][2]*speedFall- 6.5 && padY < brickY+brickH/2 +tabBricks[i][j][2]*speedFall+ 6.5  && (brickX+brickW/2+ 6.5 > padX && brickX+brickW/2 -6.5 < padX + padW)){
                tabBricks[i][j][2]=0;
            }
        }
        if (tabBricks[i][j][1]===27){
            fill(255, 255, 255);
            rect(brickX+brickW/2-7-2,brickY+brickH/2-2  +tabBricks[i][j][2]*speedFall,7,4);
            rect(brickX+brickW/2+2,brickY+brickH/2-2  +tabBricks[i][j][2]*speedFall,7,4);
            triangle(brickX+brickW/2-9-4,brickY+brickH/2  +tabBricks[i][j][2]*speedFall,brickX+brickW/2-9,brickY+brickH/2-4  +tabBricks[i][j][2]*speedFall,brickX+brickW/2-9,brickY+brickH/2+4  +tabBricks[i][j][2]*speedFall);
            triangle(brickX+brickW/2+9+4,brickY+brickH/2  +tabBricks[i][j][2]*speedFall,brickX+brickW/2+9,brickY+brickH/2-4  +tabBricks[i][j][2]*speedFall,brickX+brickW/2+9,brickY+brickH/2+4  +tabBricks[i][j][2]*speedFall); 
            if (padY+padH > brickY+brickH/2-4  +tabBricks[i][j][2]*speedFall && padY < brickY+brickH/2+4  +tabBricks[i][j][2]*speedFall  && (brickX+brickW/2-9-4 < padX+padW && brickX+brickW/2+9+4 > padX)){
                tabBricks[i][j][2]=0;
            }
        }
        if (tabBricks[i][j][1]===28){
            fill(46, 191, 70);
            ellipse(brickX+brickW/2,brickY+brickH/2 +tabBricks[i][j][2]*speedFall, 9,9);
            stroke(255, 255, 255);
            line(brickX+brickW/2,brickY+brickH/2-3 +tabBricks[i][j][2]*speedFall,brickX+brickW/2,brickY+brickH/2+3 +tabBricks[i][j][2]*speedFall);
            line(brickX+brickW/2-3,brickY+brickH/2 +tabBricks[i][j][2]*speedFall,brickX+brickW/2+3,brickY+brickH/2 +tabBricks[i][j][2]*speedFall);
            noFill();
            
            ellipse(brickX+brickW/2,brickY+brickH/2 +tabBricks[i][j][2]*speedFall, 12,12);
            noStroke();
            if (padY+padH > brickY+brickH/2 +tabBricks[i][j][2]*speedFall- 6 && padY < brickY+brickH/2 +tabBricks[i][j][2]*speedFall+ 6  && (brickX+brickW/2+ 6 > padX && brickX+brickW/2-6 < padX + padW)){
                tabBricks[i][j][2]=0;
            }
        }
        if (tabBricks[i][j][1]===29){
            fill(46, 191, 70);
            ellipse(brickX+brickW/2,brickY+brickH/2 +tabBricks[i][j][2]*speedFall, 9,9);
            stroke(255, 255, 255);
            line(brickX+brickW/2-2,brickY+brickH/2-2+tabBricks[i][j][2]*speedFall,brickX+brickW/2+2,brickY+brickH/2+2 +tabBricks[i][j][2]*speedFall);
            line(brickX+brickW/2-2,brickY+brickH/2+2+tabBricks[i][j][2]*speedFall,brickX+brickW/2+2,brickY+brickH/2-2+tabBricks[i][j][2]*speedFall);
            noFill();
            
            ellipse(brickX+brickW/2,brickY+brickH/2+tabBricks[i][j][2]*speedFall, 12,12);
            noStroke();
            if (padY+padH > brickY+brickH/2 +tabBricks[i][j][2]*speedFall- 6 && padY < brickY+brickH/2 +tabBricks[i][j][2]*speedFall+ 6  && (brickX+brickW/2+ 6 > padX && brickX+brickW/2-6 < padX + padW)){
                tabBricks[i][j][2]=0;
            }
        }
    }
    
};



var adjustPosition = function () {
    padX = padX + padDir*speedPad;
    
    ballX = ballX + ballDirectionX*speedBall;
    ballY = ballY + ballDirectionY*speedBall;
    if (ballRadius > ballY){
        ballDirectionY =ballDirectionY*-1;
    }
    if (!start){
        ballX = padX + padW/2;
        stroke(255, 0, 0);
        
        if (mouseY <  padY- ballRadius){
            sourisX = mouseX;
            sourisY = mouseY;
            ballAngle = (mouseX-ballX)/(mouseY-ballY);
        }
        line(ballX,ballY,sourisX,sourisY);
    }
    if (ballX < ballRadius || ballX > screenWidth - ballRadius){
        ballDirectionX = -1*ballDirectionX ;
    }
    if (padY-ballRadius < ballY && padY > ballY  && (ballX > padX && ballX < padX + padW)){
        ballDirectionY = -1*ballDirectionY ;
        
        
        if ( speedBall<7){
            speedBall=speedBall+0.2;
        }
    }
    if (screenHeight < ballY){
        if(shield){
            ballDirectionY = -1*ballDirectionY ;
            activeShield = false;
        }else{
            setUp();
        }
        
    }
};

var drawPad = function() {
    fill(0, 136, 255);
    rect(padX, padY, padW, padH);
};

var drawBall = function(){
    if(rebond){
        fill(255, 255, 255);
    }else{
        fill(255, 204, 0);
    }
    
    ellipse(ballX, ballY, ballRadius*2, ballRadius*2);
};

var drawBricks = function(){
    fill(161, 81, 0);
    nbKill=0;
    for(var i=0; i<nbLine ; i++){
        for(var j=0; j<nbColone ; j++){
            drawCadeau(i,j,brickX,brickW,brickY,brickH);
            if ( tabBricks[i][j][0]!==0){
                if ((ballY > brickY-ballRadius && ballY < brickY+ballRadius + brickH) &&  (ballX > brickX-ballRadius && ballX < brickX+ballRadius + brickW)){
                    if(tabBricks[i][j][0]!==4){
                        tabBricks[i][j][0]=tabBricks[i][j][0]-1;
                    }
                    if(tabBricks[i][j][0]===0){
                        score = score+10*tabBricksStart[i][j]*combo;
                        combo=combo+0.2;
                    }
                }
                 if ( (ballY > brickY-ballRadius && ballY < brickY+ballRadius + brickH) &&  (ballX > brickX && ballX < brickX + brickW)){
                    if(rebond || tabBricks[i][j][0]===4){
                        ballDirectionY = -1*ballDirectionY ;
                    }
                    
                }  
                if ((ballY > brickY && ballY < brickY + brickH) &&  (ballX > brickX-ballRadius && ballX < brickX+ballRadius + brickW)){
                    if(rebond || tabBricks[i][j][0]===4){
                        ballDirectionX = -1*ballDirectionX ;
                    }
                }
                if ((ballY > brickY-ballRadius && ballY < brickY) &&  (ballX > brickX-ballRadius && ballX < brickX)){
                    if(rebond || tabBricks[i][j][0]===4){
                        ballDirectionX = -1 ;
                        ballDirectionY = -1*ca ;
                        if (ca<= 0.5){
                            sensCa = 0.05;
                        }else if (ca>= 1.5){
                            sensCa = -0.05;
                        }
                        ca =ca+sensCa;
                    }
                     
                }
                if((ballY < brickY+ brickH+ballRadius && ballY > brickY+ brickH) &&  (ballX > brickX-ballRadius && ballX < brickX)){
                    if(rebond || tabBricks[i][j][0]===4){
                        ballDirectionX = -1 ;
                        ballDirectionY = 1*ca ;
                        if (ca<= 0.5){
                            sensCa = 0.05;
                        }else if (ca>= 1.5){
                            sensCa = -0.05;
                        }
                        ca =ca+sensCa;
                    }
                }
                if((ballY < brickY+ brickH+ballRadius && ballY > brickY+ brickH) &&  (ballX < brickX+ballRadius+ brickW && ballX > brickX+ brickW)){
                    if(rebond || tabBricks[i][j][0]===4){
                        ballDirectionX = 1 ;
                        ballDirectionY = 1*ca ;
                        if (ca<= 0.5){
                            sensCa = 0.05;
                        }else if (ca>= 1.5){
                            sensCa = -0.05;
                        }
                        ca =ca+sensCa;
                    } 
                }
                if((ballY > brickY-ballRadius && ballY < brickY) &&  (ballX < brickX+ brickW+ballRadius && ballX > brickX+ brickW)){
                    if(rebond || tabBricks[i][j][0]===4){
                        ballDirectionX = 1 ;
                        ballDirectionY = -1*ca ;
                        if (ca<= 0.5){
                            sensCa = 0.05;
                        }else if (ca>= 1.5){
                            sensCa = -0.05;
                        }
                        ca =ca+sensCa;
                    }
                    
                   }
                if (tabBricks[i][j][0]===2){
                    fill(240, 144, 40);
                }else if (tabBricks[i][j][0]===3){
                    fill(247, 55, 42); 
                }else if (tabBricks[i][j][0]===4){
                    fill(87, 87, 87);
                }else{
                    fill(255, 232, 20);
                }
                
                rect(brickX,brickY,brickW,brickH);
                
            }else{
                nbKill++;
            }
            brickX = brickX+5+brickW;
        }
        brickY = brickY+5+brickH;
        brickX = 30;
    }
    brickY = 30;
};



var draw = function() {
    if (outMenu){
        background(197, 201, 219);
        line(ballX,ballY,sourisX,sourisY);
        fill (255, 255, 255);
        text (score, screenWidth/2-5, 10);
        
        adjustPosition(); 
        noStroke();
        drawBricks();
        drawBall();
        drawPad();
        if (nbKill ===((nbColone*nbLine)-nbBlackBrick)){
            winner = true;
            setUp();
            fill(0, 0, 0,alpha(color(0, 0, 0, 100)));
            rect(0,0,screenWidth,screenHeight);
            fill(255, 0, 0);
            text ("You Win", screenWidth/2-15, 200);
            text ("Score : "+ score, screenWidth/2-15, 220);
            if (mouseIsPressed){
                menu();
            }
        }
    }else {
        menu();
    }
    
};

